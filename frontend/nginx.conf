events {
    worker_connections 1024;
}

http {
    upstream api_backend {
        server auth-service.task-manager.svc.cluster.local:80;
    }
    
    upstream task_backend {
        server task-service.task-manager.svc.cluster.local:80;
    }
    
    upstream media_backend {
        server media-service.task-manager.svc.cluster.local:80;
    }

    server {
        listen 3000;
        server_name localhost;

        # CORS headers for API requests
        add_header Access-Control-Allow-Origin $http_origin always;
        add_header Access-Control-Allow-Credentials true always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
        
        # Handle preflight requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin $http_origin;
            add_header Access-Control-Allow-Credentials true;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With";
            add_header Content-Length 0;
            add_header Content-Type text/plain;
            return 204;
        }

        # API Routes - Proxy to backend services
        location /api/auth/ {
            proxy_pass http://auth-service.task-manager.svc.cluster.local:80/auth/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/tasks/ {
            proxy_pass http://task-service.task-manager.svc.cluster.local:80/tasks/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        location /api/media/ {
            proxy_pass http://media-service.task-manager.svc.cluster.local:80/media/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Health check endpoint
        location /api/health {
            return 200 '{"status":"healthy","timestamp":"'$(date -Iseconds)'","service":"frontend-proxy"}';
            add_header Content-Type application/json;
        }

        # Frontend static files
        location / {
            try_files $uri $uri/ @nextjs;
        }

        location @nextjs {
            proxy_pass http://127.0.0.1:3001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
